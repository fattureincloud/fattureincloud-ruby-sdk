=begin
#Fatture in Cloud API v2 - API Reference

#Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

The version of the OpenAPI document: 2.0.7
Contact: info@fattureincloud.it
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FattureInCloud_Ruby_Sdk::ReceivedDocumentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReceivedDocumentsApi' do
  before do
    # run before each test
    @api_instance = FattureInCloud_Ruby_Sdk::ReceivedDocumentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReceivedDocumentsApi' do
    it 'should create an instance of ReceivedDocumentsApi' do
      expect(@api_instance).to be_instance_of(FattureInCloud_Ruby_Sdk::ReceivedDocumentsApi)
    end
  end

  # unit tests for create_received_document
  # Create Received Document
  # Creates a new document.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateReceivedDocumentRequest] :create_received_document_request Document to create
  # @return [CreateReceivedDocumentResponse]
  describe 'create_received_document test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_received_document
  # Delete Received Document
  # Deletes the specified document.
  # @param company_id The ID of the company.
  # @param document_id The ID of the document.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_received_document test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_received_document_attachment
  # Delete Received Document Attachment
  # Removes the attachment of the specified document.
  # @param company_id The ID of the company.
  # @param document_id The ID of the document.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_received_document_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_existing_received_document_totals
  # Get Existing Received Document Totals
  # Returns the totals for the specified document.
  # @param company_id The ID of the company.
  # @param document_id The ID of the document.
  # @param [Hash] opts the optional parameters
  # @option opts [GetExistingReceivedDocumentTotalsRequest] :get_existing_received_document_totals_request Received document.
  # @return [GetExistingReceivedDocumentTotalsResponse]
  describe 'get_existing_received_document_totals test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_new_received_document_totals
  # Get New Received Document Totals
  # Returns the totals for a new document.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [GetNewReceivedDocumentTotalsRequest] :get_new_received_document_totals_request Received document.
  # @return [GetNewReceivedDocumentTotalsResponse]
  describe 'get_new_received_document_totals test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_received_document
  # Get Received Document
  # Gets the specified document.
  # @param company_id The ID of the company.
  # @param document_id The ID of the document.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @return [GetReceivedDocumentResponse]
  describe 'get_received_document test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_received_document_pre_create_info
  # Get Received Document Pre-Create Info
  # Retrieves the information useful while creating a new document.
  # @param company_id The ID of the company.
  # @param type The type of the received document.
  # @param [Hash] opts the optional parameters
  # @return [GetReceivedDocumentPreCreateInfoResponse]
  describe 'get_received_document_pre_create_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_received_documents
  # List Received Documents
  # Lists the received documents.
  # @param company_id The ID of the company.
  # @param type The type of the received document.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @option opts [String] :sort List of comma-separated fields for result sorting (minus for desc sorting).
  # @option opts [Integer] :page The page to retrieve.
  # @option opts [Integer] :per_page The size of the page.
  # @return [ListReceivedDocumentsResponse]
  describe 'list_received_documents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_received_document
  # Modify Received Document
  # Modifies the specified document.
  # @param company_id The ID of the company.
  # @param document_id The ID of the document.
  # @param [Hash] opts the optional parameters
  # @option opts [ModifyReceivedDocumentRequest] :modify_received_document_request Modified document.
  # @return [ModifyReceivedDocumentResponse]
  describe 'modify_received_document test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_received_document_attachment
  # Upload Received Document Attachment
  # Uploads an attachment destined to a received document. The actual association between the document and the attachment must be implemented separately, using the returned token.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filename Name of the file.
  # @option opts [File] :attachment Valid format: .png, .jpg, .gif, .pdf, .zip, .xls, .xlsx, .doc, .docx
  # @return [UploadReceivedDocumentAttachmentResponse]
  describe 'upload_received_document_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
