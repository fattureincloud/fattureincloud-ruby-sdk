=begin
#Fatture in Cloud API v2 - API Reference

#Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

The version of the OpenAPI document: 2.0.7
Contact: info@fattureincloud.it
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FattureInCloudSdk::SettingsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SettingsApi' do
  before do
    # run before each test
    @api_instance = FattureInCloudSdk::SettingsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingsApi' do
    it 'should create an instance of SettingsApi' do
      expect(@api_instance).to be_instance_of(FattureInCloudSdk::SettingsApi)
    end
  end

  # unit tests for create_payment_account
  # Create Payment Account
  # Creates a new payment account.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreatePaymentAccountRequest] :create_payment_account_request 
  # @return [CreatePaymentAccountResponse]
  describe 'create_payment_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_payment_method
  # Create Payment Method
  # Creates a new payment method.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreatePaymentMethodRequest] :create_payment_method_request 
  # @return [CreatePaymentMethodResponse]
  describe 'create_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_vat_type
  # Create Vat Type
  # Creates a vat type.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateVatTypeRequest] :create_vat_type_request 
  # @return [CreateVatTypeResponse]
  describe 'create_vat_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_payment_account
  # Delete Payment Account
  # Deletes the specified payment account.
  # @param company_id The ID of the company.
  # @param payment_account_id The Referred Payment Account Id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_payment_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_payment_method
  # Delete Payment Method
  # Deletes the specified payment method.
  # @param company_id The ID of the company.
  # @param payment_method_id The Referred Payment Method Id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_vat_type
  # Delete Vat Type
  # Deletes the specified vat type.
  # @param company_id The ID of the company.
  # @param vat_type_id The Referred Vat Type Id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_vat_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payment_account
  # Get Payment Account
  # Gets the specified payment account.
  # @param company_id The ID of the company.
  # @param payment_account_id The Referred Payment Account Id.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @return [GetPaymentAccountResponse]
  describe 'get_payment_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payment_method
  # Get Payment Method
  # Gets the specified payment method.
  # @param company_id The ID of the company.
  # @param payment_method_id The Referred Payment Method Id.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @return [GetPaymentMethodResponse]
  describe 'get_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vat_type
  # Get Vat Type
  # Gets the specified vat type.
  # @param company_id The ID of the company.
  # @param vat_type_id The Referred Vat Type Id.
  # @param [Hash] opts the optional parameters
  # @return [GetVatTypeResponse]
  describe 'get_vat_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_payment_account
  # Modify Payment Account
  # Modifies the specified payment account.
  # @param company_id The ID of the company.
  # @param payment_account_id The Referred Payment Account Id.
  # @param [Hash] opts the optional parameters
  # @option opts [ModifyPaymentAccountRequest] :modify_payment_account_request 
  # @return [ModifyPaymentAccountResponse]
  describe 'modify_payment_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_payment_method
  # Modify Payment Method
  # Modifies the specified payment method.
  # @param company_id The ID of the company.
  # @param payment_method_id The Referred Payment Method Id.
  # @param [Hash] opts the optional parameters
  # @option opts [ModifyPaymentMethodRequest] :modify_payment_method_request 
  # @return [ModifyPaymentMethodResponse]
  describe 'modify_payment_method test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_vat_type
  # Modify Vat Type
  # Modifies the specified vat type.
  # @param company_id The ID of the company.
  # @param vat_type_id The Referred Vat Type Id.
  # @param [Hash] opts the optional parameters
  # @option opts [ModifyVatTypeRequest] :modify_vat_type_request 
  # @return [ModifyVatTypeResponse]
  describe 'modify_vat_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
