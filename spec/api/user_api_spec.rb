=begin
#Fatture in Cloud API v2 - API Reference

#Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

The version of the OpenAPI document: 2.0.7
Contact: info@fattureincloud.it
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FattureInCloud_Ruby_Sdk::UserApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UserApi' do
  before do
    # run before each test
    @api_instance = FattureInCloud_Ruby_Sdk::UserApi.new

    @get_user_info_response_obj = {"data":{"id":2,"name":"Mario Rossi","first_name":"Mario","last_name":"Rossi","email":"marior@example.com","picture":nil,"hash":"5add29e1046432a1bf2ed7b612043029"},"info":{"need_password_change":false,"need_marketing_consents_confirmation":false,"need_terms_of_service_confirmation":false},"email_confirmation_state":{"need_confirmation":false}}
    allow(@api_instance).to receive(:get_user_info) {@get_user_info_response_obj}
  
    @list_user_companies_response_obj = {"data":{"id":12345,"name":"Studio Commercialista","tax_code":"ABCSFN94T17A794K","type":"accountant","access_token":"4ff5f0fe5abcd1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4f7362a848fa32dbb8c3a3f94c34f3df95","connection_id":94566,"controlled_companies":[{"id":12246,"name":"Studio Commercialista","tax_code":"ABCSFN94T17A794K","type":"company","access_token":"4ff5f0fe5abcdf1d7157fa13ca72ab62b6183db0667a576a0e19164801c18c4f7362a848fa32dbb8c3a3f94c34f3df95","connection_id":94566,"controlled_companies":[],"fic":true,"dic":true,"fic_plan":"premium_plus","fic_license_expire":"2021-12-31","permissions":{"fic_situation":"write","fic_clients":"write","fic_suppliers":"write","fic_products":"write","fic_issued_documents":"write","fic_received_documents":"write","fic_receipts":"write","fic_calendar":"write","fic_archive":"write","fic_taxes":"write","fic_stock":"write","fic_cashbook":"write","fic_settings":"write","fic_emails":"write","dic_employees":"write","dic_timesheet":"write","dic_settings":"write"}},{"id":12347,"name":"Mario Rossi SRL","tax_code":"57398280214","type":"company","access_token":"86690c98be13592e78b763c52fab2ba0c22faa118708ca5273da2b4dcdc7ad1234517107266d463fd9ae424a78c16cde","connection_id":94566,"controlled_companies":[],"fic":true,"dic":false,"fic_plan":"trial","fic_license_expire":"2021-12-31","permissions":{"fic_situation":"write","fic_clients":"write","fic_suppliers":"write","fic_products":"write","fic_issued_documents":"write","fic_received_documents":"write","fic_receipts":"write","fic_calendar":"write","fic_archive":"write","fic_taxes":"write","fic_stock":"write","fic_cashbook":"write","fic_settings":"write","fic_emails":"write","dic_employees":"none","dic_timesheet":"none","dic_settings":"none"}}]}}
    allow(@api_instance).to receive(:list_user_companies) {@list_user_companies_response_obj}

  end

  after do
    # run after each test
  end

  describe 'test an instance of UserApi' do
    it 'should create an instance of UserApi' do
      expect(@api_instance).to be_instance_of(FattureInCloud_Ruby_Sdk::UserApi)
    end
  end

  # unit tests for get_user_info
  # Get User Info
  # Gets the current user&#39;s info.
  # @param [Hash] opts the optional parameters
  # @return [GetUserInfoResponse]
  describe 'get_user_info test' do
    it 'should work' do
      response = @api_instance.get_user_info()
      response_obj = JSON.parse(response.to_json, object_class: OpenStruct)
      expected_json = @get_user_info_response_obj.to_json
      actual_json = response.to_json

      expect(actual_json).to eq(expected_json)
    end
  end

  # unit tests for list_user_companies
  # List User Companies
  # Lists the companies controlled by the current user.
  # @param [Hash] opts the optional parameters
  # @return [ListUserCompaniesResponse]
  describe 'list_user_companies test' do
    it 'should work' do
      response = @api_instance.list_user_companies()
      response_obj = JSON.parse(response.to_json, object_class: OpenStruct)
      expected_json = @list_user_companies_response_obj.to_json
      actual_json = response.to_json

      expect(actual_json).to eq(expected_json)
    end
  end

end
