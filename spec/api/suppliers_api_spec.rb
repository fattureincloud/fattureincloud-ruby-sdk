=begin
#Fatture in Cloud API v2 - API Reference

#Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.

The version of the OpenAPI document: 2.0.7
Contact: info@fattureincloud.it
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FattureInCloud_Ruby_Sdk::SuppliersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SuppliersApi' do
  before do
    # run before each test
    @api_instance = FattureInCloud_Ruby_Sdk::SuppliersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SuppliersApi' do
    it 'should create an instance of SuppliersApi' do
      expect(@api_instance).to be_instance_of(FattureInCloud_Ruby_Sdk::SuppliersApi)
    end
  end

  # unit tests for create_supplier
  # Create Supplier
  # Creates a new supplier.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateSupplierRequest] :create_supplier_request The supplier to create
  # @return [CreateSupplierResponse]
  describe 'create_supplier test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_supplier
  # Delete Supplier
  # Deletes the specified supplier.
  # @param company_id The ID of the company.
  # @param supplier_id The ID of the supplier.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_supplier test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_supplier
  # Get Supplier
  # Gets the specified supplier.
  # @param company_id The ID of the company.
  # @param supplier_id The ID of the supplier.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @return [GetSupplierResponse]
  describe 'get_supplier test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_suppliers
  # List Suppliers
  # Lists the suppliers.
  # @param company_id The ID of the company.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields List of comma-separated fields.
  # @option opts [String] :fieldset Name of the fieldset.
  # @option opts [String] :sort List of comma-separated fields for result sorting (minus for desc sorting).
  # @option opts [Integer] :page The page to retrieve.
  # @option opts [Integer] :per_page The size of the page.
  # @return [ListSuppliersResponse]
  describe 'list_suppliers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_supplier
  # Modify Supplier
  # Modifies the specified supplier.
  # @param company_id The ID of the company.
  # @param supplier_id The ID of the supplier.
  # @param [Hash] opts the optional parameters
  # @option opts [ModifySupplierRequest] :modify_supplier_request The modified Supplier. First level parameters are managed in delta mode.
  # @return [ModifySupplierResponse]
  describe 'modify_supplier test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
